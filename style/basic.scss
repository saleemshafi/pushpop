@mixin rounded($border, $radius:$border*3) {
  border-width: $border;
  border-style: solid;
  border-radius: $radius;
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
}

@mixin box-shadow($shadow1, $shadow2:false, $shadow3:false, $shadow4:false, $shadow5:false) {
 $params: $shadow1;
  @if $shadow2 
    { $params: $shadow1, $shadow2; }
    @if $shadow3 != false
      { $params: $shadow1, $shadow2, $shadow3; }
      @if $shadow4 != false
        { $params: $shadow1, $shadow2, $shadow3, $shadow4; }
        @if $shadow5 != false
          { $params: $shadow1, $shadow2, $shadow3, $shadow4, $shadow5; }

  -webkit-appearance: none;
  -webkit-box-shadow: $params;
  -moz-box-shadow: $params;
  box-shadow: $params;
}

@mixin colored-piece($color) {
  background-color: lighten($color, 25%);
  border-color: $color;
}

@mixin centered($width) {
  margin-right: auto;
  margin-left: auto;
  position: relative;
  width: $width;
}

$solutionOverlap: 0.85;


//////////////////  Sized ///////////////

$gameStackBorderWidth: 3px;
$toolbarHeight: 47px;

body {
  margin: 10px;
}

#game-stack {
  @include rounded($gameStackBorderWidth, 19px);
}

.pauseContent {
  font-size: 36px;
  margin-top: -75px;
}

.help-text {
  font-size: 24px;
  padding: 15px 30px !important;
  .piece {
    @include rounded(2px);
    padding: 2px 10px;
  }
}


#pushpop .ui-dialog {
  width: 400px;
  padding: 0;

  .ui-dialog-contain {
    width: auto;
    padding: 25px;
    @include box-shadow(0 0 8px 10px rgba(0, 0, 0, 0.3));
    border: 1px solid rgba(0, 0, 0, 0.5);
  }

  .buttons {
    margin-top: 25px;
  }
}

#pushpop #gameOver {
  width: 325px;
}

@mixin all_the_sizes($screenWidth, $screenHeight, $pieceWidth, $pieceHeight, $puzzleSidePadding, $pieceBorder) {

  $stack-padding: $pieceWidth / 6;
  $pieceOverlap: -$pieceHeight / 4;
  
  #game-board {
    .stack {
      width:$pieceWidth + ($pieceBorder * 2);
      min-height:1px;
      padding-left:$stack-padding; 
    }
  }
  
  .piece {
    @include rounded($pieceBorder);
    width: $pieceWidth; 
    height: $pieceHeight; 
    margin-bottom: $pieceOverlap; 
    @include box-shadow(0 4px 5px 3px rgba(0,0,0,0.5));
  
    .shape {
      $textHeight: $pieceHeight * 0.6;
      height:$textHeight; 
      margin-top:$textHeight * -0.5; 
      font-size:$textHeight; 
    }
  }
}

@mixin portrait_sizes($screenWidth, $screenHeight, $pieceWidth, $pieceHeight, $puzzleSidePadding, $pieceBorder) {
  @include all_the_sizes($screenWidth, $screenHeight, $pieceWidth, $pieceHeight, $puzzleSidePadding, $pieceBorder);
  $stack-padding: $pieceWidth / 6;
  $pieceOverlap: -$pieceHeight / 4;
  #game-board {
    $boardWidth: ($pieceWidth+ ($pieceBorder*2))*4 + ($stack-padding*3);
    @include centered($boardWidth);
  }
  .game {
    $gameHeight: (($pieceHeight+($pieceBorder*2)) * 4) + ($pieceOverlap * 3) + (50px + $pieceHeight + ($pieceBorder*2) + (5px*2));
    height: $gameHeight;
    top: 50%;
    margin-top: (-$gameHeight / 2) - ($toolbarHeight / 2);
  }
  #game-stack {
    padding: 5px round($pieceWidth*$solutionOverlap)+5 5px 3px;
    margin: 0 auto $pieceHeight * 0.8 auto;
    height: $pieceHeight + ($pieceBorder*2);
    width: (round($pieceWidth * (1-$solutionOverlap)) + ($pieceBorder * 2)) * 16;
    .piece {  
      margin-right: round($pieceWidth * -$solutionOverlap);
      @include box-shadow(6px 0 6px -3px #333);
    }
  }
}

@mixin landscape_sizes($screenWidth, $screenHeight, $pieceWidth, $pieceHeight, $puzzleSidePadding, $pieceBorder) {
  @include all_the_sizes($screenWidth, $screenHeight, $pieceWidth, $pieceHeight, $puzzleSidePadding, $pieceBorder);
  $stack-padding: $pieceWidth / 6;
  $pieceOverlap: -$pieceHeight / 4;
  .game {
    width: $screenWidth - (2 * $puzzleSidePadding);
    top: 50%;
    $gameHeight: (($pieceHeight+($pieceBorder*2)) * 4) + ($pieceOverlap * 3);
    height: $gameHeight;
    margin-top: (-$gameHeight / 2) - ($toolbarHeight / 2);
  }
  #game-stack {
    $stackWidth: $pieceWidth + ($pieceBorder*2);
    $stackHeight: round($pieceHeight * (1-$solutionOverlap)) * 16;
    $stackSidePadding: 5px;
    left: $screenWidth - (2 * $puzzleSidePadding) - $stackWidth - (2 * $gameStackBorderWidth) - (2*$stackSidePadding);
    width: $stackWidth;
    height: $stackHeight;
    padding: round($pieceHeight*$solutionOverlap)+($pieceBorder*2)+5 5px 0 5px;
    .piece {
      margin-top: round($pieceHeight * -$solutionOverlap) - ($pieceBorder * 2);
      @include box-shadow(0 6px 6px -3px #333);
    }
  }
}
// touchpad, ipad 1&2: 1024x768
// ipad 2 retina: 2048x1536 
// iphone: 320x480
// iphone retina: 960x640
// Android screens:
//    xlarge screens are at least 960dp x 720dp
//    large screens are at least 640dp x 480dp
//    normal screens are at least 470dp x 320dp
//    small screens are at least 426dp x 320dp

@media screen and (orientation:portrait) {
  #pushpop.small {
    @include portrait_sizes(480px, 320px, 60px, 60px, 35px, 3px);
    
    #newGameConfirm {
      width: 250px;
      .buttons a {
        display: block;
      }
    }
    
    #gameOver {
      width: 302px;
      .ui-dialog-contain {
        padding:15px;
      }
    }
  }
  #pushpop.medium {
    @include portrait_sizes(640px, 480px, 90px, 90px, 30px, 4px);
  }
  #pushpop.large {
    @include portrait_sizes(1024px, 768px, 120px, 120px, 100px, 5px);
  }
}
@media screen and (orientation:landscape){
  #pushpop.small {
    @include landscape_sizes(480px, 320px, 60px, 60px, 35px, 3px);
  }
  #pushpop.medium {
    @include landscape_sizes(640px, 480px, 90px, 90px, 30px, 4px);
  }
  #pushpop.large {
    @include landscape_sizes(1024px, 768px, 120px, 120px, 100px, 5px);
  }
}

@media (min-device-width: 480px) and (min-device-height: 640px) and (orientation:portrait) {
}
@media (min-device-width: 640px) and (min-device-height: 480px) and (orientation:landscape) {
}

@media (min-device-width: 600px) and (min-device-height: 1024px) and (orientation:portrait){
}
@media (min-device-width: 1024px) and (min-device-height: 600px) and (orientation:landscape){
}


/////////////////////////////////////////////////////////

///////////// Size agnostic ////////////////////
$backgroundColor: #121212;

body {
  background-color: $backgroundColor;
  font-family: Segoe UI, Arial, Helvetica, sans-serif;
}

.color_0 { @include colored-piece(red); }
.color_1 { @include colored-piece(yellow); }
.color_2 { @include colored-piece(blue); }
.color_3 { @include colored-piece(green); }

#game-stack {
  border-color: #888;
  .piece {
    cursor: pointer;
  }
}

.ui-icon-pause {
  background-image: url("images/pause.png") !important;
}

.timer-panel { 
  position: absolute;
  top: 0;
}

#help {
  height: 100%;
}

#puzzle {
  overflow: hidden;
}

#gameMenu {
  display:none;
  position:absolute;
  z-index: 10;
  @include box-shadow(4px 4px 7px 4px rgba(0, 0, 0, 0.7));
  
  .ui-slider {
    width: auto;
    display: block;
    margin: .25em 5px;
  }
}

.paused {
  #pause { display: none; }
  .scrim {display: block; }
  .game { display: none; }
}

#stats {
  text-align: center;
}

.ui-dialog-contain h1 {
  text-align: center;
  margin-top: 0;
}

#pushpop .workarea {
  height: 100%;
  width: auto;
  background-color: $backgroundColor;
  overflow: hidden;
  padding: 0;
}

.pauseContent {
  position: absolute;
  top: 50%;
  width: 100%;
  text-align: center;
}

.game {
  margin-left:auto;
  margin-right:auto;
  z-index: 2;
}

.game, .help-text {
  position: relative;
}

#pushpop .ui-dialog {
  margin: 0 auto;
  position: relative;
  background-color: #000;

  .ui-dialog-contain {
    background-color: #000;
    position: absolute;
    top: 50%;
    margin-top: -25%;
    text-shadow: none;
    color: #fff;
  }
  #quip {
    text-align: center;
    font-size: 18px;
    padding-top: 1em;
    font-weight: bold;
    color: yellow;
  }
}

body .help-text {
  min-height: 100%;
  #push { color: lighten(red, 25%); }
  #pop { color: lighten(yellow, 25%); }
  #head { color: lighten(blue, 25%); }
  #tail { color: lighten(green, 25%); }
  .piece {
    color: black;
    text-shadow: none;
    @include rounded(3px, 9px);
  }
  #yellow3, #yellow1 { @include colored-piece(blue); }
  #red3, #red1 { @include colored-piece(red); }
}

#game-board {
  .stack {
    display: inline-block;
    vertical-align: top;
    .piece:first-child {
      cursor: pointer;
      opacity:1;
    }
  }
  .stack:first-child {
    padding-left:0 !important;
  }
}

.piece {
  position: relative;

  .shape {
    position:absolute; 
    top:50%; 
    text-align: center;
    text-shadow: none;
    color: #000; 
    width: 100%;
    line-height: 1;
  }
}

@media screen and (orientation:portrait) {
  .ui-page {
    width: 100%;
    height: 100%;
  }
  #game-board {
    .stack:first-child {
      padding-left:0;
    }    
  }
  #game-stack {
    position: relative;
    border-left: none;
    .piece {
      position:relative;
      display:inline-block;
    }
  }
}

@media screen and (orientation:landscape) {
  .ui-page {
    width: 100%;
    height: 100%;
  }
  #game-board {
    .stack:first-child {
      padding-left:0;
    }    
  }
  #game-stack {
    position: absolute;
    border-top: none;
    .piece {
      margin-bottom: 0;
    }
  }
}

////////////////////////////////////////////////

