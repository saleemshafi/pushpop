@mixin rounded($border, $radius:$border*3) {
  border-width: $border;
  border-style: solid;
  border-radius: $radius;
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
}

@mixin transition($param1, $param2:false, $param3:false, $param4:false, $param5:false) {
 $params: $param1;
  @if $param2 
    { $params: $param1, $param2; }
    @if $param3 != false
      { $params: $param1, $param2, $param3; }
      @if $param4 != false
        { $params: $param1, $param2, $param3, $param4; }
        @if $param5 != false
          { $params: $param1, $param2, $param3, $param4, $param5; }

  transition: $params;
  -moz-transition:$params;
  -webkit-transition:$params;
  -o-transition:$params;
}

@mixin box-shadow($shadow1, $shadow2:false, $shadow3:false, $shadow4:false, $shadow5:false) {
 $params: $shadow1;
  @if $shadow2 
    { $params: $shadow1, $shadow2; }
    @if $shadow3 != false
      { $params: $shadow1, $shadow2, $shadow3; }
      @if $shadow4 != false
        { $params: $shadow1, $shadow2, $shadow3, $shadow4; }
        @if $shadow5 != false
          { $params: $shadow1, $shadow2, $shadow3, $shadow4, $shadow5; }

  -webkit-appearance: none;
  -webkit-box-shadow: $params;
  -moz-box-shadow: $params;
  box-shadow: $params;
}

@mixin colored-piece($color, $lightenBy:25%) {
  background-color: lighten($color, $lightenBy);
  border-color: $color;
}

@mixin centered($width) {
  margin-right: auto;
  margin-left: auto;
  position: relative;
  width: $width;
}


//////////////////  Sized ///////////////

$gameStackBorderWidth: 3px;
$toolbarHeight: 47px;

body {
  margin: 10px;
}

h1 { font-size: 2em; margin-bottom: 0.67em; }

#game-stack {
  @include rounded($gameStackBorderWidth, 19px);
}

.pauseContent {
  font-size: 36px;
  margin-top: -75px;
}

.help-text {
  font-size: 24px;
  padding: 15px 30px !important;
  .piece {
    @include rounded(2px);
    padding: 2px 10px;
  }
}


#pushpop .ui-dialog {
  padding: 0;

  .ui-dialog-contain {
    width: 400px;
    margin-left: -200px;
    padding: 25px;
    @include box-shadow(0 0 8px 10px rgba(0, 0, 0, 0.3));
    border: 1px solid rgba(0, 0, 0, 0.5);
  }

  .buttons {
    margin-top: 25px;
  }
}

#pushpop.small .ui-dialog {
  .ui-dialog-contain {
    padding: 10px;
    h1 {
      font-size: 1.5em;
    }
  }
  #quip {
    font-size: 16px;
  }
  .buttons {
    margin-top: 15px;
  }
}

@mixin all_the_sizes($screenWidth, $screenHeight, $pieceWidth, $pieceHeight, $puzzleSidePadding, $pieceBorder) {

  $stack-padding: $pieceWidth / 6;
  $pieceOverlap: -$pieceHeight / 4;
  
  #game-board {
    .stack {
      width:$pieceWidth + ($pieceBorder * 2);
      min-height:1px;
      margin-left:$stack-padding; 
    }
    
    .popped {
      margin-top: -$pieceHeight - $pieceOverlap - (2*$pieceBorder);
      opacity: 0;
    }
  }

  .numbers {
    .shape {
      $textHeight: $pieceHeight * 0.6;
      height:$textHeight; 
      margin-top:$textHeight * -0.5; 
      font-size:$textHeight; 
    }
  }
  
  .shapes {
    .shape_2 {
       border-bottom-width: $pieceHeight * 2/3;
       border-left: $pieceHeight * 1/3 solid transparent; 
       border-right: $pieceHeight * 1/3 solid transparent;
    }  
  }
  
  .piece {
    @include rounded($pieceBorder);
    width: $pieceWidth; 
    height: $pieceHeight; 
    margin-bottom: $pieceOverlap; 
    @include box-shadow(0 4px 5px 3px rgba(0,0,0,0.5));
  }
}

@mixin portrait_sizes($screenWidth, $screenHeight, $pieceWidth, $pieceHeight, $puzzleSidePadding, $pieceBorder) {
  @include all_the_sizes($screenWidth, $screenHeight, $pieceWidth, $pieceHeight, $puzzleSidePadding, $pieceBorder);
  $stack-padding: $pieceWidth / 6;
  $pieceOverlap: -$pieceHeight / 4;
  #game-board {
    $boardWidth: ($pieceWidth+ ($pieceBorder*2))*4 + ($stack-padding*3);
    @include centered($boardWidth);
  }
  .game {
    $gameHeight: (($pieceHeight+($pieceBorder*2)) * 4) + ($pieceOverlap * 3) + (50px + $pieceHeight + ($pieceBorder*2) + (5px*2));
    height: $gameHeight;
    top: 50%;
    margin-top: (-$gameHeight / 2) - ($toolbarHeight / 2);
  }
  #game-stack {
    $solutionOverlap: 0.75;
    $solutionOverlapPx: round(($pieceWidth + ($pieceBorder * 2)) * $solutionOverlap);
    padding: 5px;
    margin: 0 auto $pieceHeight * 0.4 auto;
    height: $pieceHeight + ($pieceBorder*2);
    width: ($pieceWidth + ($pieceBorder * 2) - $solutionOverlapPx) * 15  + $pieceWidth + ($pieceBorder * 2);
    .piece {  
      margin-right: -$solutionOverlapPx;
      @include box-shadow(6px 0 6px -3px #333);
    }
    .piece.popped {
      left: -$pieceHeight;
      opacity: 0;
    }
  }
}

@mixin landscape_sizes($screenWidth, $screenHeight, $pieceWidth, $pieceHeight, $puzzleSidePadding, $pieceBorder) {
  @include all_the_sizes($screenWidth, $screenHeight, $pieceWidth, $pieceHeight, $puzzleSidePadding, $pieceBorder);
  $stack-padding: $pieceWidth / 6;
  $pieceOverlap: -$pieceHeight / 4;
  .game {
    width: $screenWidth - (2 * $puzzleSidePadding);
    top: 50%;
    $gameHeight: (($pieceHeight+($pieceBorder*2)) * 4) + ($pieceOverlap * 3);
    height: $gameHeight;
    margin-top: (-$gameHeight / 2) - ($toolbarHeight / 2) - 10px;
  }
  #game-stack {
    $solutionOverlap: 0.85;
    $solutionOverlapPx: round(($pieceHeight + ($pieceBorder * 2)) * $solutionOverlap);
    $stackWidth: $pieceWidth + ($pieceBorder*2);
    $stackHeight: ($pieceHeight + ($pieceBorder * 2) - $solutionOverlapPx) * 15  + $pieceHeight + ($pieceBorder * 2);
    $stackSidePadding: 5px;
    left: $screenWidth - (2 * $puzzleSidePadding) - $stackWidth - (2 * $gameStackBorderWidth) - (2*$stackSidePadding);
    width: $stackWidth;
    height: $stackHeight;
    padding: 5px;
    .piece {
      margin-bottom: -$solutionOverlapPx;
      @include box-shadow(0 6px 6px -3px #333);
    }
    .piece.popped {
      top: -$pieceHeight - $pieceOverlap - (2*$pieceBorder);
      opacity: 0;
    }
  }
}
// touchpad, ipad 1&2: 1024x768
// ipad 2 retina: 2048x1536 
// iphone: 320x480
// iphone retina: 960x640
// Android screens:
//    xlarge screens are at least 960dp x 720dp
//    large screens are at least 640dp x 480dp
//    normal screens are at least 470dp x 320dp
//    small screens are at least 426dp x 320dp

@media screen and (orientation:portrait) {
  #pushpop.small {
    @include portrait_sizes(480px, 320px, 60px, 60px, 35px, 3px);
    
    .ui-dialog {
      .buttons a {
        display: block;
      }
      .ui-dialog-contain {
        width: 302px;
        margin-left: -151px;
        padding:15px;
      }
    }
    
    .demo-controls {
      .ui-icon { display: none; }
      .ui-btn-inner { padding-left: 20px; }
      .demo-buttons { width: 315px; }
    }

    
    
  }
  #pushpop.medium {
    @include portrait_sizes(640px, 480px, 90px, 90px, 30px, 4px);
  }
  #pushpop.large {
    @include portrait_sizes(1024px, 768px, 120px, 120px, 100px, 5px);
  }
}
@media screen and (orientation:landscape){
  #pushpop.small {
    @include landscape_sizes(480px, 320px, 60px, 60px, 35px, 3px);
  }
  #pushpop.medium {
    @include landscape_sizes(640px, 480px, 90px, 90px, 30px, 4px);
  }
  #pushpop.large {
    @include landscape_sizes(1024px, 768px, 120px, 120px, 100px, 5px);
  }
}

/////////////////////////////////////////////////////////

///////////// Size agnostic ////////////////////
$backgroundColor: #121212;

body {
  background-color: $backgroundColor;
  font-family: Segoe UI, Arial, Helvetica, sans-serif;
}

.color_0 { @include colored-piece(red); }
.color_1 { @include colored-piece(#FFB000); }
.color_2 { @include colored-piece(blue); }
.color_3 { @include colored-piece(green); }

.shapes {
  .color_0 .shape {
    background-color: red;
    border-bottom-color: red;
  }
  .color_1 .shape {
    background-color: #FFB000;
    border-bottom-color: #FFB000;
  }
  .color_2 .shape {
    background-color: blue;
    border-bottom-color: blue;
  }
  .color_3 .shape {
    background-color: green;
    border-bottom-color: green;
  }
  
}

.numbers {
  .shape {
    position:absolute; 
    top:50%; 
    text-align: center;
    text-shadow: none;
    color: #000; 
    width: 100%;
    line-height: 1;
  }
  .shape_0::before { content: "1"; }
  .shape_1::before { content: "2"; }
  .shape_2::before { content: "3"; }
  .shape_3::before { content: "4"; }
}
  

.shapes {
  .piece .shape_0 {   // circle
    width: 66%;
    height: 66%;
    border-radius: 120px;
    top: 50%;
    margin: -33% auto 0 auto;
    position: relative;
    content: "";
  }

  .shape_1 {         // square
     width: 60%;
     height: 60%;
     top: 50%;
     margin: -30% auto 0 auto;
     position: relative;
     content: "";
  }
  
  .shape_2 {        // triangle
     width: 0; 
     height: 0; 
     top: 50%;
     background: none !important; 
     border-bottom-style: solid;
     margin: -33% auto 0 auto;
     position: relative;
     content: "";
  }

  .shape_3 {      // diamond
     width: 50%; 
     height: 50%; 
     top: 50%;
     left: 50%;
     margin: -12% 0 0 0;
     position: relative;
     content: "";
     
     /* Rotate */
     -webkit-transform: rotate(-45deg);
     -moz-transform: rotate(-45deg);
     -ms-transform: rotate(-45deg);
     -o-transform: rotate(-45deg);
     transform: rotate(-45deg);
     /* Rotate Origin */
     -webkit-transform-origin: 0 100%;
     -moz-transform-origin: 0 100%;
     -ms-transform-origin: 0 100%;
     -o-transform-origin: 0 100%;
     transform-origin: 0 100%;
  }
}


#game-stack {
  border-color: #888;
  .piece {
    cursor: pointer;
    top: 0;
    left: 0;
  }
}

.piece {
  @include transition(opacity 600ms, margin-top 600ms, left 600ms, top 600ms);
}

.piece.pushed {
  margin-top: 0 !important;
  opacity: 1 !important;  
}

.ui-icon-pause {
  background-image: url("images/pause.png") !important;
}

.timer-panel { 
  position: absolute;
  top: 0;
}

#help {
  height: 100%;
}

#puzzle {
  overflow: hidden;
}

#gameMenu {
  display:none;
  position:absolute;
  z-index: 10;
  @include box-shadow(4px 4px 7px 4px rgba(0, 0, 0, 0.7));
  
  .ui-slider {
    width: auto;
    display: block;
    margin: .25em 5px;
  }
}

.paused {
  #pause { display: none; }
  .scrim {display: block; }
  .game { display: none; }
}

#stats {
  text-align: center;
}

.ui-dialog-contain h1 {
  text-align: center;
  margin-top: 0;
}

#pushpop .workarea {
  height: 100%;
  width: auto;
  background-color: $backgroundColor;
  overflow: hidden;
  padding: 0;
}

.pauseContent {
  position: absolute;
  top: 50%;
  width: 100%;
  text-align: center;
}

.game {
  margin-left:auto;
  margin-right:auto;
  z-index: 2;
}

.game, .help-text {
  position: relative;
}

#pushpop .ui-slider {
  width: 100%;
}

#pushpop .ui-dialog {
  margin: 0;
  position: absolute;
  background-color: #000;
  width: 100%;
  
  .ui-dialog-contain {
    background-color: #000;
    position: absolute;
    left: 50%;
    bottom: 0;
    margin-bottom: 0;
    border-color: #666;
    @include rounded(1px, .6em .6em 0 0);
    border-bottom: none;
    text-shadow: none;
    color: #fff;
    width: 100%;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
  }
  #quip {
    text-align: center;
    font-size: 18px;
    padding-top: 1em;
    font-weight: bold;
    color: yellow;
  }
}

body .help-text {
  min-height: 100%;
  #push { color: lighten(red, 25%); }
  #pop { color: lighten(yellow, 25%); }
  #head { color: lighten(blue, 25%); }
  #tail { color: lighten(green, 25%); }
  .piece {
    color: black;
    text-shadow: none;
    @include rounded(3px, 9px);
  }
  #yellow3, #yellow1 { @include colored-piece(blue); }
  #red3, #red1 { @include colored-piece(red); }
  #yellow1::before, #red1::before { content: "1"; }
  #yellow3::before, #red3::before { content: "3"; }
}

#game-board {
  .stack {
    display: inline-block;
    vertical-align: top;
    cursor: pointer;
  }
  .stack:first-child {
    margin-left:0 !important;
  }
}

.demo-controls {
  display: none; 
  position: absolute;
  width: 100%;
  bottom: 0;
  .demo-buttons {
    width: 400px;
    margin: 0 auto;
  }
}

.in-demo .demo-controls {
  display: block;
}

.piece {
  position: relative;
}

@media screen and (orientation:portrait) {
  .ui-page {
    width: 100%;
    height: 100%;
  }
  #game-board {
    .stack:first-child {
      margin-left:0;
    }    
  }
  #game-stack {
    position: relative;
    border-left: none;
    .piece {
      position:relative;
      display:inline-block;
    }
  }
}

@media screen and (orientation:landscape) {
  .ui-page {
    width: 100%;
    height: 100%;
  }
  #game-board {
    .stack:first-child {
      padding-left:0;
    }    
  }
  #game-stack {
    position: absolute;
    border-top: none;
    .piece {
      margin-bottom: 0;
    }
  }
}

li.disabled .ui-li {
  padding-left: 25px;
  background-image: url(images/lock.png);
  background-repeat: no-repeat;
  background-position: 0 50%;
}

#gameOver .buttons, #pushpop.small #gameOver .buttons {
  #nextLevel, .getPremiumBtn {
    display: none;
  }
}

#gameOver .buttons.upLevel #nextLevel, #pushpop.small #gameOver .buttons.upLevel #nextLevel {
  display: block;
}

#gameOver .buttons.upgrade .getPremiumBtn, #pushpop.small #gameOver .buttons.upgrade .getPremiumBtn {
  display: block;
}

.demo-controls {
  position: absolute !important;
  z-index: 5;
}

#pushpop.small .demo-controls .ui-btn {
  margin: 0.5em 3px;
}

p {
  margin-top: 1em;
}
////////////////////////////////////////////////

